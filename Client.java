/* Part of Client module    
 * Creates connection to server and communicates with server.
 * Author:Dhruv raj singh rathore
 * Creation date:3 September 2014
 */

package chat.room;
import java.io.*;
import java.net.*;
import java.util.*;
/**
 *
 * @author HP
 */
public class Client extends javax.swing.JFrame {
     String username;
     ArrayList<String> online=new ArrayList();
     Socket sock;
     PrintWriter writer;
     BufferedReader reader;
     int isOnline=0;

    /**
     * Creates new form Client
     */
    public class Listen implements Runnable
    {
        public void run()
        {
             String data[];
             String inputstream;
            
           try
           {
               while( ( inputstream=reader.readLine())!=null  ) 
             {
                data=inputstream.split(":");
              
                if(data[2].equals("Connect"))
                {
                //    txtchat.append(data[0]+" has connected\n");
                    online.add(data[0]);         
                }
                else if(data[2].equals("Disconnect"))
                {
                    txtchat.append(data[0]+" has disconnected\n");            
                }
                else if(data[2].equals("Chat"))
                {
                    txtchat.append(data[0]+":"+data[1]+"\n");
                }
                else if(data[2].equals("Done"))
                {
                       txtonline.setText("");
                       int n=online.size();
                       for(int i=0;i<n;++i)
                            txtonline.append(online.get(i)+"\n");  
                       online.clear();
                }
                else
                {
                   txtchat.append("Not matched to any input from server \n");
                }        
             }
           }    
           catch(IOException ex)
           {
              txtchat.append("Could not recieve data \n");
           }
        }
    }
    public void Listens(String user)
    {
                txtonline.setText("");
                username=user;
                this.setVisible(true);              
                startlistening();     
    }         
    public void startlistening()
    {
      if(isOnline==0)  
      {      
      try
         {
              // put server's ip address here
               sock=new Socket("192.168.153.1",5000);
               InputStreamReader streamreader = new InputStreamReader(sock.getInputStream());
               reader = new BufferedReader(streamreader);
               writer=new PrintWriter(sock.getOutputStream());
               writer.println(username+":has connected.:Connect");
               writer.flush();           
         }
         catch(IOException ex)
                 {
                     txtchat.setText("Could not connect to server\n");
                 }
        isOnline++;
        Thread listen=new Thread(new Listen()); 
        listen.start();
      }  
    }        
      
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtchat = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtonline = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        txtmsg = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtchat.setEditable(false);
        txtchat.setColumns(20);
        txtchat.setRows(5);
        jScrollPane1.setViewportView(txtchat);

        jLabel1.setText("Who's Here");

        txtonline.setEditable(false);
        txtonline.setBackground(new java.awt.Color(153, 153, 153));
        txtonline.setColumns(20);
        txtonline.setRows(5);
        jScrollPane2.setViewportView(txtonline);

        jLabel2.setText("Chat Area");

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Log out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       
        String msg=txtmsg.getText();
        if(msg.equals(""))
        {
          txtmsg.requestFocus();
        }
        else
        {
         try
         {
              writer.println(username+":"+msg+":"+"Chat");
              writer.flush();       
         }    
         catch(Exception ex)
         {
             txtchat.append("Could not deliver message \n");
         }
          txtmsg.setText("");
          txtmsg.requestFocus(); 
        }    
        
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
         txtonline.setText("");
      txtchat.setText("");
      try
      {
         writer.println(username+":"+" :Disconnect"); 
         writer.flush();
         sock.close();
      }
      catch(IOException ex)
      {
               txtchat.append("Could not log out \n");    
      }
      this.setVisible(false);
      new Interface_Client().setVisible(true);
    }                                        

    private void formWindowActivated(java.awt.event.WindowEvent evt) {                                     
        
        // TODO add your handling code here:
    }                                    

    private void formWindowClosed(java.awt.event.WindowEvent evt) {                                  
      txtonline.setText("");
      txtchat.setText("");
      try
      {
         writer.println(username+":"+" :Disconnect"); 
         writer.flush();
         sock.close();
      }
      catch(IOException ex)
      {
               txtchat.append("Could not log out \n");    
      }
    }                                 

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
    
             txtonline.setText("");
      txtchat.setText("");
      try
      {
         writer.println(username+":"+" :Disconnect"); 
         writer.flush();
         sock.close();
      }
      catch(IOException ex)
      {
               txtchat.append("Could not log out \n");    
      }
      this.setVisible(false);
      new Interface_Client().setVisible(true);
    
        
    }                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                   new Client().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtchat;
    private javax.swing.JTextField txtmsg;
    private javax.swing.JTextArea txtonline;
    // End of variables declaration                   
}
